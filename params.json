{"name":"Ncs","google":"","tagline":"nodecast server","note":"Don't delete this file! It's used internally to help with page regeneration.","body":"### Welcome to Nodecast server.\r\nNodecast is a worker scheduler, also it's agnoctic so yours workers can use any kind of langage. Workers must read STDIN to receive a payload and write to STDOUT to push a payload.\r\nYour worker is managed though [NCW](http://nodecast.github.com/ncw/) (nodecast client) which is connected to NCS.\r\nNodecast can push any kind of binary data to a worker or to a pool of worker.\r\n\r\nNodecast is using deeply [Zeromq](http://www.zeromq.org/) to communicate between yours workers and [mongoDB](http://www.mongodb.org/) to store yours payloads and the workers's status.\r\n\r\nIt embeds an HTTP server to expose an API.\r\n\r\n\r\n### FUTUR\r\nNodecast have also an XMPP server and soon a torrent tracker. These features will be explains later.\r\n\r\nThe next big step is to embeds a web interface to manage yours workers, kwow their status, etc ...\r\n\r\n### TECH\r\nNodecast is using a full Qt stack (C++) so he has a tiny memory print and he is really quickly to perform yours tasks. \r\n\r\n[This picture](https://raw.github.com/nodecast/ncs/master/docs/ncs_dev.png) is showing the internal architecture, it's only for developers.\r\n\r\n![nodecast internal architecture](https://raw.github.com/nodecast/ncs/master/docs/ncs_dev.png)\r\n\r\nPicture of nodecast for a user\r\n\r\n![nodecast user's architecture](https://raw.github.com/nodecast/ncs/master/docs/ncs_user.png)\r\n\r\n### Launch NCS\r\n\r\n```\r\n$ ncs --mongodb-ip=127.0.0.1 --mongodb-base=nodecast_prod --domain-name=localhost --xmpp-client-port=6222 --xmpp-server-port=6269 --smtp-hostname=\"your.server.mail\" --smtp-username=\"your-user-account\" --smtp-password=\"your-password\" --smtp-sender=\"your-email-sender\" --smtp-recipient=\"your-email-recipient\"\r\n```\r\n\r\nNodecast can use smtp protocol to send an email alert when a worker is down.\r\n\r\n\r\n### USAGE\r\n\r\nYou need to create a node and a workflow (see [NCW](http://nodecast.github.com/ncw/) page)\r\n\r\npush your data\r\n\r\n```\r\ncurl -H \"X-node-uuid: 2d0a7780-e8fe-4e0a-89c6-a5a2737b095a\" -H \"X-node-password: 2d0a7780-e8fe-4e0a-89c6-a5a2737b095a\" -H \"X-workflow-uuid: 0ebcdab6-0263-42d3-be7d-9602fa15f68c\" -H \"X-payloadfilename: filename\" -X POST --data-binary @filename http://127.0.0.1:4567/payload/create\r\n```\r\n\r\nreturn a session uuid : \r\n\r\n```\r\n{\"uuid\":\"7b32b9d0-3ea9-4663-9577-4b34192055bf\"}\r\n```\r\n\r\nNodecast will store your data to [GridFS](http://www.mongodb.org/display/DOCS/GridFS) and push it to your first worker according your workflow.\r\n\r\n\r\n### Contact\r\n@fredix\r\n\r\nemail : fredix at nodecast do net\r\n\r\nirc : #nodecast on irc.freenode.net"}